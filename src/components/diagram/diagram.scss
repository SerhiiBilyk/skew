.diagram {
  border: 1px solid red;
  height: 300px;
  background-color: white;
  padding: 100px;
}

.circle {
  position: relative;
  display: inline-block;

  &::after {
    content: attr(per);
    position: absolute;
    color: black;
    left: 0;
    line-height: 92px;
    text-align: center;
    width: 100%;
    height: 100%;
    border: 1px solid red;
  }
}
@function PercentToDegree($percent) {
   @if $percent <=50{
    @return unquote(((360/100) * $percent)+'deg');
  }
  @else {
     @return unquote( '180deg');
  }
}
@function left($percent) {
   @if ($percent <= 50){
    @return 0;
  }
  @else {
     @return $percent - 50;
  }
}
@mixin circleDiagram($percent) {
   @keyframes right{
    to {
      transform: rotate(PercentToDegree($percent));
    }
  }
  @keyframes left {
    0% {
      opacity: 1;
    }

    50% {
      opacity: 1;
    }

    100% {
      transform: rotate(PercentToDegree(left($percent)));
      opacity: 1;
    }
  }
}
@include circleDiagram(78);
.pie {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background: yellowgreen;
  background-image: linear-gradient(to right, transparent 50%, #655 0);
  position: relative;

  &::after {
    content: '';
    display: block;
    margin-left: 50%;
    height: 100%;
    border-radius: 0 100% 100% 0 / 50%;
    background-color: #655;
    transform-origin: left;
    position: relative;
    top: -100px;
    opacity: 0;
    transform-origin: left;
    animation: left 1s linear 1;
    animation-fill-mode: forwards;
    animation-delay: 3s;
  }

  &::before {
    content: '';
    display: block;
    margin-left: 50%;
    height: 100%;
    border-radius: 0 100% 100% 0 / 50%;
    background-color: inherit;
    transform-origin: left;
    animation: right 3s linear 1;
    animation-fill-mode: forwards;
    animation-delay: inherit;
  }
}
