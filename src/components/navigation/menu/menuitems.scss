$nested: 'rgba(255,255,255,0)','	rgba(92,16,16,0.8)','rgba(111,0,0)','	rgba(92,16,16,0.8)','rgba(111,0,0)' !global;


@keyframes anim {
  from {
    max-height: 0;
    height: auto;
  }

  to {
    max-height: 4000px;
    height: auto;
  }
}
@keyframes reverse-anim {
  from {
    max-height: 900px;
    height: auto;
  }
  to {
    max-height: 0;
    height: auto;
  }
}

.items {
  padding-top:50px;
  @include clearfix;
  &.pc {
    ul > li.container{

      position:relative;
      &::after{
        content:'<';
        position:absolute;
        left:0;
        color:red;

      }
    }
    .container {
      position: relative;

      &:hover {
        background-color:unquote(nth($nested,2));

        & > .sub {
          display: block;
          position: absolute;
          width: 200%;
          top: 100%;
          left: -50%;
          @include linkReset{
            color:black;
            text-decoration:none;
          };

          &[deep] {
            position: absolute;
          }
          /*
    first nested menu have special style
     */
          &[deep='1'] {
            background-color:rgba(92,16,16,.9);;
            color:white;
            position: absolute;
            top: 100%;
            @include clearfix;


            &:after {
              content: '';
              position: absolute;
              left: 50%;
              top: -10px;
              transform: translateX(-7px);
              width: 0;
              height: 0;
              border-left: 10px solid transparent;
              border-right: 10px solid transparent;
              border-bottom: 10px solid #e8e8e8;
            }
          }

          @for $i from 2 through 4 {
            .sub[deep='#{$i}'] {
              left: -100%;
              transform: translateX(-10px);
              top: -15px;
              width: 100%;
              background-color: unquote(nth($nested,$i));
              padding: 15px 0;
              z-index: $i;

              &:after {
                content: '';
                width: 10px;
                right: -10px;
                height: 100%;
                top: 0;
                position: absolute;
              }
            }
          }

          .item {
            display: block;
            float: none;
            width: 100%;

  @include linkReset{
    text-decoration: none;
    color:white;

}
          }
        }
      }
    }
  }

  &.mobile {
    font-size: 16px;
    position: relative;
    color: black;
    width: 100%;
    z-index: 20;
    //border: 1px solid white;
    display: none;
    /*disable-- height:0 --for IE*/
    //height: 0;
    transform: translateZ(0);
    transition: all 0.1s ease-in-out;
    overflow: hidden;
    will-change: height;
    max-height: 0;
    //padding-left:15px;

    &.show {
      display: block;
      animation-name: anim;
      animation-delay: 0.1s;
      animation-duration: 1s;
      animation-fill-mode: forwards;
      .container{
        border-left:5px solid 	white;

      }

    }

    &.hide {
      display: block;
      animation-name: reverse-anim;
      animation-duration: 1s;
      animation-fill-mode: forwards;
    }

    .item {
      width: 100%;
      display: inline-block;
      text-align: left;
      transition:all 1s ease;
      padding-left:15px;
      &:hover{
        //background-color:red;
      }

    }
  }
}

.container,
.sub {
  display: none;
}

.sub {
  //@include clearfix;
}

.container[deep='0'],
.item {
  float: left;
  width: 16.6666%;
  text-align: center;
  display: block;
  @include navigation-height-fix;
}



@include media ('zerro','md-tablet') {
  .pc {
  display: none;
}

.mobile {
  display: block;
  background-color: unquote(nth($nested,1));
}
.item{
  @include linkReset{
    text-decoration: none;
    color:white;
  }
}
.container[deep] {
  position: relative;


  & > .sub {
    /*IE fix*/
    //height: 0;
    max-height: 0;
    overflow: hidden;
    display: none;
    padding-left: 30px;
  }
  .sub[deep='1']{
    background-color: unquote(nth($nested,2));
  }
  @for $i from 2 through 4 {
    .sub[deep='#{$i}'] {
      background-color: unquote(nth($nested,$i+1));
    }
  }

  &.show {
    & > .sub {
      display: block;
      animation-name: anim;
      animation-delay: 0.1s;
      animation-duration: 1s;
      animation-fill-mode: forwards;
    }
  }

  &.hide {
    & > .sub {
      display: block;
      animation-name: reverse-anim;
      animation-duration: 1s;
      animation-fill-mode: forwards;
    }
  }
}
}
